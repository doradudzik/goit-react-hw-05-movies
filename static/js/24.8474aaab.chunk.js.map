{"version":3,"file":"static/js/24.8474aaab.chunk.js","mappings":"4KAEMA,EAAW,+BACXC,EAAS,mCAETC,EAAiB,mCAAG,6GAECC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uBAA4C,CACjEI,OAAQ,CACNC,QAASJ,KAJS,cAEhBK,EAFgB,gBAQTA,EAASC,KAAKC,QARL,wEAUtBC,QAAQC,MAAR,MAVsB,yDAAH,qDAcjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEMT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CAC3DI,OAAQ,CACNC,QAASJ,EACTW,MAAAA,KALa,cAEXN,EAFW,gBASJA,EAASC,KAAKC,QATV,wEAWjBC,QAAQC,MAAR,MAXiB,yDAAH,sDAeZG,EAAe,mCAAG,WAAMC,GAAN,gGAEGX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+Bc,GAAM,CAC1DV,OAAQ,CACNC,QAASJ,KAJO,cAEdK,EAFc,gBAOPA,EAASC,KAPF,wEASpBE,QAAQC,MAAR,MAToB,yDAAH,sDAafK,EAAe,mCAAG,WAAMD,GAAN,gGAEGX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+Bc,EAA/B,YAA6C,CAClEV,OAAQ,CACNC,QAASJ,KAJO,cAEdK,EAFc,gBAQPA,EAASC,KARF,wEAUpBE,QAAQC,MAAR,MAVoB,yDAAH,sDAcfM,EAAe,mCAAG,WAAMF,GAAN,gGAEGX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+Bc,EAA/B,YAA6C,CAClEV,OAAQ,CACNC,QAASJ,KAJO,cAEdK,EAFc,gBAOPA,EAASC,KAAKC,QAPP,wEASpBC,QAAQC,MAAR,MAToB,yDAAH,sDAafO,EAAM,CACVf,kBAAAA,EACAS,aAAAA,EACAE,gBAAAA,EACAE,gBAAAA,EACAC,gBAAAA,GAGF,K,6HCjFA,EAA2B,uBAA3B,EAAmE,6BAAnE,EAA2G,uBAA3G,EAAiJ,2BAAjJ,EAAkM,kCAAlM,EAAqP,6B,+EC6DrP,EAvDa,WACX,IAAQF,GAAOI,EAAAA,EAAAA,MAAPJ,GACR,GAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGD,GAAa,GAFhB,SAGyBN,EAAAA,EAAAA,gBAAoBH,GAH7C,OAGSW,EAHT,OAKGJ,EAAQI,EAAQL,MALnB,gDAOGX,QAAQC,MAAR,MAPH,yBASGa,GAAa,GAThB,2EAAD,EAYD,GAAE,CAACF,EAASP,KAGX,gCACGM,EAAKM,OAAS,GACb,eAAIC,UAAWC,EAAf,SACGR,EAAKS,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,gBAAaL,UAAWC,EAAxB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACEK,IACED,EAAY,6CAC8BA,GACtCE,EAENC,IAAKL,EAAO,QACZM,QAAQ,OACRT,UACEK,EAAeJ,EAAmBA,OAIxC,iBAAKD,UAAWC,EAAhB,WACE,wBAAKE,GAAc,kBACnB,yBAAG,IAAEC,GAAwB,4BAjBxBjB,EADD,OAwBZ,uBAAG,uCAEJQ,GAAaF,EAAKM,OAAS,IAAK,SAACW,EAAA,EAAD,MAGtC,C","sources":["components/Api/Api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst APIKEY = '775c071d6bf771d9c27bbbe414ac595c';\n\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: APIKEY,\n      },\n    });\n\n    return await response.data.results;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst searchMovies = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: APIKEY,\n        query,\n      },\n    });\n\n    return await response.data.results;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n      params: {\n        api_key: APIKEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst getMovieCredits = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n      params: {\n        api_key: APIKEY,\n      },\n    });\n\n    return await response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n      params: {\n        api_key: APIKEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst Api = {\n  getTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default Api;\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castList__item\":\"Cast_castList__item__dndbM\",\"photoBox\":\"Cast_photoBox__YfXvr\",\"profileImage\":\"Cast_profileImage__-NEww\",\"defaultProfileImage\":\"Cast_defaultProfileImage__ygXOc\",\"castList__name\":\"Cast_castList__name__8SsVX\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport Api from 'components/Api/Api';\nimport person from './images/person.jpg';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const credits = await Api.getMovieCredits(id);\n\n        setCast(credits.cast);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [setCast, id]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul className={css.castList}>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <li key={id} className={css.castList__item}>\n              <div className={css.photoBox}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/original${profile_path}`\n                      : person\n                  }\n                  alt={name + 'photo'}\n                  loading=\"lazy\"\n                  className={\n                    profile_path ? css.profileImage : css.defaultProfileImage\n                  }\n                />\n              </div>\n              <div className={css.castList__name}>\n                <h4>{name ? name : 'Unknown name'}</h4>\n                <p> {character ? character : 'Unknown character'}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There is no information about cast</p>\n      )}\n      {isLoading && cast.length > 0 && <Loader />}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","APIKEY","getTrendingMovies","axios","params","api_key","response","data","results","console","error","searchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Api","useParams","useState","cast","setCast","isLoading","setIsLoading","useEffect","credits","length","className","css","map","name","character","profile_path","src","person","alt","loading","Loader"],"sourceRoot":""}