{"version":3,"file":"static/js/168.d9e0f007.chunk.js","mappings":"6KAEMA,EAAW,+BACXC,EAAS,mCAETC,EAAiB,mCAAG,6GAECC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uBAA4C,CACjEI,OAAQ,CACNC,QAASJ,KAJS,cAEhBK,EAFgB,gBAQTA,EAASC,KAAKC,QARL,wEAUtBC,QAAQC,MAAR,MAVsB,yDAAH,qDAcjBC,EAAY,mCAAG,WAAMC,GAAN,gGAEMT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CAC3DI,OAAQ,CACNC,QAASJ,EACTW,MAAAA,KALa,cAEXN,EAFW,gBASJA,EAASC,KAAKC,QATV,wEAWjBC,QAAQC,MAAR,MAXiB,yDAAH,sDAeZG,EAAe,mCAAG,WAAMC,GAAN,gGAEGX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+Bc,GAAM,CAC1DV,OAAQ,CACNC,QAASJ,KAJO,cAEdK,EAFc,gBAOPA,EAASC,KAPF,wEASpBE,QAAQC,MAAR,MAToB,yDAAH,sDAafK,EAAe,mCAAG,WAAMD,GAAN,gGAEGX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+Bc,EAA/B,YAA6C,CAClEV,OAAQ,CACNC,QAASJ,KAJO,cAEdK,EAFc,gBAQPA,EAASC,KARF,wEAUpBE,QAAQC,MAAR,MAVoB,yDAAH,sDAcfM,EAAe,mCAAG,WAAMF,GAAN,gGAEGX,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+Bc,EAA/B,YAA6C,CAClEV,OAAQ,CACNC,QAASJ,KAJO,cAEdK,EAFc,gBAOPA,EAASC,KAAKC,QAPP,wEASpBC,QAAQC,MAAR,MAToB,yDAAH,sDAafO,EAAM,CACVf,kBAAAA,EACAS,aAAAA,EACAE,gBAAAA,EACAE,gBAAAA,EACAC,gBAAAA,GAGF,K,6HCjFA,EAA8B,6BAA9B,EAA+E,mCAA/E,EAAyI,sC,0BC+CzI,EA1CgB,WACd,IAAQF,GAAOI,EAAAA,EAAAA,MAAPJ,GACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAfAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGD,GAAa,GAFhB,SAG4BN,EAAAA,EAAAA,gBAAoBH,GAHhD,OAGSW,EAHT,OAKGJ,EAAWI,GALd,gDAOGhB,QAAQC,MAAR,MAPH,yBASGa,GAAa,GAThB,2EAAD,EAYD,GAAE,CAACF,EAAYP,KAGd,gCACGM,EAAQM,OAAS,GAChB,eAAIC,UAAWC,EAAf,SACGR,EAAQS,KACP,gBAAGf,EAAH,EAAGA,GAAH,IAAOgB,eAAkBC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,KAAQC,EAA3C,EAA2CA,QAA3C,OACE,gBAAaN,UAAWC,EAAxB,WACE,0BAAKG,GAAYC,GAAQ,UAAU,QACnC,yBAAIC,EAAQ,SAFLnB,EADX,OASJ,cAAGa,UAAWC,EAAd,SAAwC,6CAIzCN,GAAaF,EAAQM,OAAS,IAAK,SAACQ,EAAA,EAAD,MAGzC,C","sources":["components/Api/Api.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst APIKEY = '775c071d6bf771d9c27bbbe414ac595c';\n\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n      params: {\n        api_key: APIKEY,\n      },\n    });\n\n    return await response.data.results;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst searchMovies = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: APIKEY,\n        query,\n      },\n    });\n\n    return await response.data.results;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst getMovieDetails = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n      params: {\n        api_key: APIKEY,\n      },\n    });\n    return await response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst getMovieCredits = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n      params: {\n        api_key: APIKEY,\n      },\n    });\n\n    return await response.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n      params: {\n        api_key: APIKEY,\n      },\n    });\n    return await response.data.results;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst Api = {\n  getTrendingMovies,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default Api;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"reviewsList__item\":\"Reviews_reviewsList__item__IMV+x\",\"reviewsList__message\":\"Reviews_reviewsList__message__n53Ps\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Reviews.module.css';\nimport Api from 'components/Api/Api';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const reviewsApi = await Api.getMovieReviews(id);\n\n        setReviews(reviewsApi);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [setReviews, id]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul className={css.reviewsList}>\n          {reviews.map(\n            ({ id, author_details: { username, name }, content }) => (\n              <li key={id} className={css.reviewsList__item}>\n                <h4>{username || name || 'Unknown'} </h4>\n                <p>{content} </p>\n              </li>\n            )\n          )}\n        </ul>\n      ) : (\n        <p className={css.reviewsList__message}>\n          We don't have any reviews for this movie\n        </p>\n      )}\n      {isLoading && reviews.length > 0 && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","APIKEY","getTrendingMovies","axios","params","api_key","response","data","results","console","error","searchMovies","query","getMovieDetails","id","getMovieCredits","getMovieReviews","Api","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","reviewsApi","length","className","css","map","author_details","username","name","content","Loader"],"sourceRoot":""}